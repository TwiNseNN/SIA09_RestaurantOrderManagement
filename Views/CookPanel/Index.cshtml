@model List<OrderItem>;
@{
    ViewData["Title"] = "Cook list";
}

<h1>Cook list</h1>
@foreach (var orderItem in Model)
{
    <div class="card mb-2 @(orderItem.IsReverted ? "text-white bg-danger" : "")">
        <div class="card-header">
            Table @orderItem.Order.TableNumber
            <span class="badge float-right badge-@(orderItem.Status == OrderItemStatus.NotReady ? "danger" : "warning")">
                @Enum.GetName(typeof(OrderItemStatus), orderItem.Status)
            </span>
        </div>
        <div class="card-body">
            @(orderItem.Quantity)x
            @(orderItem.MenuItem.Name)
            <div class="float-right">
                <form asp-action="SetStatus" method="post">
                    <input type="hidden" name="compoundId" value="@orderItem.OrderId-@orderItem.MenuItemId" />
                    <input type="hidden" name="newStatus" value="@(orderItem.Status == OrderItemStatus.NotReady ? "Preparing" : "ReadyToServe")" />
                    <button class="btn btn-outline-@(orderItem.Status == OrderItemStatus.NotReady ? "primary" : "success")">
                        @(orderItem.Status == OrderItemStatus.NotReady ? "Take item" : "Mark as completed")
                    </button>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                window.location = window.location;
            }, 2500);
        });
    </script>
}
