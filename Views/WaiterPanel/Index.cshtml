@using System.Globalization;

@model RestaurantManagementOrder.Models.WaiterTables.Index;
@{
    ViewData["Title"] = "Tables";
    var tableCount = RestaurantManagementOrder.Services.Constants.TableCount;
}

<style>
   .view-container {
        height: 80vh;
        width: 100%;
        display: flex;
    }
    .background-container {
        height: 100%;
        width: fit-content;
        position: relative;
    }
    .background-container > img {
        height: 100%;
        width: 150%;
    }
    .table {
        position: absolute;
        width: 86px;
        color: black;
        background-color: #FFFB;
        text-align: center;
        height: 50px;
        font-size: 12px;
    }
</style>

<h1>Tables</h1>

@{/*@{ int table = 1; }
@while (true)
{
    <div class="row my-3">
        @for (int j = 0; j < 4; j++)
        {
            var order = Model.TableOrders[table - 1];
            <div class="col-3">
                <div class="card border-@(order != null ? "danger" : "success")">
                    <div class="card-header text-@(order != null ? "danger" : "success")">
                        <h4 class="card-title">
                            Table @table
                        </h4>
                    </div>
                    <div class="card-body">
                        @if (order != null)
                        {
                            @if (order.OrderItems.Any(oi => oi.Status == OrderItemStatus.ReadyToServe))
                            {
                                <h4 class="badge badge-success">Ready to Serve!</h4>
                            }
                            var lastTwo = order.OrderItems.TakeLast(2);
                            @foreach (var featuredItem in lastTwo)
                            {
                                <div>
                                    @(featuredItem.Quantity)x
                                    @featuredItem.MenuItem.Name
                                </div>
                            }
                            @if (order.OrderItems.Count >= 3)
                            {
                                <div>
                                    ...
                                </div>
                            }
                        }
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-primary stretched-link" asp-action="Table" asp-route-id="@table">
                            @(order != null ? "Edit order" : "Take new order")
                        </a>
                    </div>
                </div>
            </div>
            table++;
            if (table > tableCount)
                break;
        }
    </div>
    if (table > tableCount)
        break;
}*/}

@{
    var tablePositions = new List<(float, float)>() {
        (2.9f, 7.2f),
        (2.9f, 32.9f),
        (2.9f, 58.1f),
        (2.9f, 82.6f),
        (25.3f, 10.6f),
        (25.3f, 33.4f),
        (25.3f, 56.3f),
        (25.3f, 79f),
        (45.3f, 67.8f),
        (45.3f, 90.6f),
        (64.9f, 56.3f),
        (64.9f, 87.1f),
        (64.9f, 120f),
        (85.7f, 56.3f),
        (85.7f, 87.1f),
        (85.7f, 120f),
    };
}

<div class="view-container">
    <div class="background-container">
        <img src="https://i.ibb.co/XXSMrF4/Small-Restaurant-Seating-Plan-BUN.jpg" />
        @foreach (var (tablePos, idx) in tablePositions.Select((t, idx) => (t, idx)))
        {
            var order = Model.TableOrders[idx];
            <a asp-action="Table" asp-route-id="@(idx + 1)" class="table card" style="top: @(tablePos.Item1.ToString(CultureInfo.InvariantCulture))%; left:@(tablePos.Item2.ToString(CultureInfo.InvariantCulture))%;">
                <div class="card-body @(order != null ? "bg-success" : "")">
                    Table @(idx + 1)
                </div>
            </a>
        }
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //$(document).ready(function () {
        //    setTimeout(function () {
        //        window.location = window.location;
        //    }, 2500);
        //});
    </script>
}
